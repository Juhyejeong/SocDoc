<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="hpMem">
	<select id="getHpInfo" parameterType="String" resultType="com.synergy.socdoc.member.HpInfoVO">
		select hpname, dept, address, phone, info, latitude, longitude from hospitalInfo where hpSeq = #{hpSeq}
	</select>

	<select id="getInfoUpdateList" parameterType="String" resultType="com.synergy.socdoc.member.HpInfoVO">
		select submitId, hpName, status, to_char(uploadDate, 'yyyy-mm-dd') as uploadDate from hpApplication where hpseq = #{hpSeq}
	</select>

	<select id="getHpInfoDetail" parameterType="String" resultType="com.synergy.socdoc.member.HpInfoVO">
		select hpname, dept, address, phone, info, mainImg, subImg1, subImg2, reason from hpApplication where submitId = #{submitId}
	</select>
	
	<!-- 병원의 영업시간 가져오기 -->
	<resultMap type="HashMap" id="openingHours">
		<result property="day" column="day" javaType="String"></result>
		<result property="open" column="open" javaType="String"></result>
		<result property="close" column="close" javaType="String"></result>
		
	</resultMap>
	
	<select id="getOpeningHours" parameterType="String" resultMap="openingHours">
		select nvl2(s.open, s.day, null) as day, nvl(s.open, null) as open, nvl2(s.open, t.hour, null) as close
		from
		(select s.day, s.close, t.hour as open
		from schedule s left join
		     timetable t
		     on s.open = t.hourSeq and s.hpSeq = #{hpSeq}
		)s
		join timetable t
		on s.close = t.hourSeq
		order by day asc
	</select>
	
	<!-- 오픈/클로즈 시간 가져오기 -->
	<resultMap type="HashMap" id="scheduleTbl">
		<result property="day" column="day" javaType="String"></result>
		<result property="open" column="open" javaType="String"></result>
		<result property="close" column="close" javaType="String"></result>
		
	</resultMap>
	
	
	<select id="getScheduleTbl" parameterType="String" resultMap="scheduleTbl">
		select nvl2(s.open, s.day, null) as day, nvl(s.open, null) as open, nvl2(s.open, t.hour, null) as close
		from
		(select s.day, s.close, t.hour as open
		from scheduleEdit s left join
		     timetable t
		     on s.open = t.hourSeq and s.submitid = #{submitId}
		)s
		join timetable t
		on s.close = t.hourSeq
		order by day asc
	</select>

	<!-- 후기 목록 가져오기 -->
	<resultMap type="HashMap" id="recentReviews">
		<result property="userid" column="userid" javaType="String"></result>
		<result property="rating" column="rating" javaType="String"></result>
		<result property="content" column="content" javaType="String"></result>
		<result property="regDate" column="regDate" javaType="String"></result>
		
	</resultMap>
	
	<select id="getRecentReviews" parameterType="String" resultMap="recentReviews">
		select rno, userid, rating, content, to_char(regDate, 'yyyy-mm-dd') as regDate
		from 
		(select rownum as rno, V.userid, V.rating, V.content, V.regDate
		from
		(select userid, rating, content, regDate from hospitalReview 
		where hpSeq = #{hpSeq}
		order by regDate desc) V
		order by rno)
		where <![CDATA[ ROWNUM <= 3 ]]>
	</select>

	<!-- 방문자 목록 가져오기 -->
	<resultMap type="HashMap" id="visitorsList">
		<result property="rno" column="rno" javaType="String"></result>
		<result property="userid" column="userid" javaType="String"></result>
		<result property="name" column="name" javaType="String"></result>
		<result property="birthDate" column="birthDate" javaType="String"></result>
		<result property="phone" column="phone" javaType="String"></result>
		<result property="age" column="age" javaType="String"></result>
		<result property="visitDate" column="visitDate" javaType="String"></result>
		
	</resultMap>
	
	<select id="getVisitors" parameterType="String" resultMap="visitorsList">
		select RNO, userid, name, birthDate, visitDate, age, phone from
		(select rownum AS RNO, V.userid, V.name, V.birthDate, V.visitDate, V.age, V.phone
		  from 
		    (
		        select distinct M.userid, M.name, to_char(M.birthDate, 'yyyy-mm-dd') as birthDate, to_char(R.visitDate, 'yyyy-mm-dd') as visitDate
		        , (extract(year from sysdate)) - extract(year from birthDate) + 1 as age, M.phone
		        from reservation R join member M
		        on R.status = 1 and R.hpSeq = #{hpSeq} and R.userid = M.userid
		        order by visitDate desc
		    ) V
		 ) T
		where T.RNO between 1 and 10
	</select>
	
	
</mapper>
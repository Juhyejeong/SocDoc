<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="test">
	<select id="getContent" resultType="String">
		select email from tbl_test where userid = 'woniyoon'
	</select>
	
	
	<!-- <select id="hospital_select" resultType="com.synergy.socdoc.member.HpInfoVO"> 
		select hpSeq,dept,mainImg,hpName,info
		from hospitalInfo
	</select> -->
	
	<select id="viewMyinfo" parameterType="String" resultType="com.synergy.socdoc.member.MemberVO">
       select userid, email, name, phone, height, weight, bloodType, bloodType, allergy, history, medicine, memberSeq
       ,to_char(birthDate, 'yyyy-mm-dd') AS birthDate
       ,gender
       from member
       where userid = #{userid}
      </select>
      
	<!-- <select id="deptList" resultType="String">
		select distinct nvl(dept,-9999) as dept
		from hospitalInfo
		order by dept
	</select> -->
	
	<!-- <select id="hpinfovoList" parameterType="HashMap" resultType="com.synergy.socdoc.member.HpInfoVO"> 
		select hpSeq,dept,mainImg,hpName,info
		from hospitalInfo
	</select> -->

	<select id="deptIdList" resultType="String">
      select distinct dept
      from hospitalInfo
      order by dept
   </select>

	<!-- <select id="hpinfovoList" resultType="com.synergy.socdoc.member.HpInfoVO"> 
		select hpSeq,dept,mainImg,hpName,info
		from hospitalInfo
	</select>  -->
	
	<select id="hpinfovoList" parameterType="HashMap" resultType="com.synergy.socdoc.member.HpInfoVO">
       select hpSeq,dept,mainImg,hpName,info
      from hospitalInfo
      where 1=1
      <if test="deptIdArr != null">
      and nvl(dept, '-9999') in 
         <foreach collection="deptIdArr" index="i" open="(" separator="," close=")">   <!-- collection명 또는 배열명  -->
               '${deptIdArr[i]}'
         </foreach>
      </if>
      <!-- <if test="gender!=null">
         and func_gender(E.jubun) = #{gender}
      </if> -->
      order by hpSeq
   </select> 

	<!-- 검색기능  -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		 	from hospitalInfo 
     		where 1=1
     		<if test="searchWord != ''">
     		<!-- and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'  -->
     		and ${searchType} like '%' || #{searchWord} || '%'
     		</if>
	</select>
	
	
	<select id="searchwWithPaging" parameterType="HashMap" resultType="com.synergy.socdoc.member.HpInfoVO">
		select hpSeq,dept,mainImg,hpName,info
		from
		(
		        select row_number() over(order by hpseq desc) AS rno
		        ,hpSeq,dept,mainImg,hpName,info
		        from hospitalInfo
		        where 1=1
		       <!--  where 11=11 -->
		        <if test="searchWord != ''">
		        	<!-- and lower(${searchType}) like '%' || lower(#{searchWord}) || '%'  -->
		        	and ${searchType} like '%' || #{searchWord} || '%'
		    	</if>
		    	<if test="deptIdArr != null">
         			and dept in
         			<foreach collection="deptIdArr" index="i" open="(" separator="," close=")">   <!-- collection명 또는 배열명  -->
      					 '${deptIdArr[i]}'
      				</foreach>  
		    	</if> 
		       ) V
		where V.rno between #{startRno} and #{endRno}
	</select>
	
	<!-- 가능한 시간대 가져오기 -->
	<select id="getHours" parameterType="HashMap" resultType="String">
		 select T.hour from
		(SELECT hourSeq, count(hourSeq) as cnt
		FROM reservation
		WHERE hpSeq = #{hpSeq} and to_char(visitDate, 'yyyy-mm-dd') = #{visitDate}
		GROUP BY hourSeq
		order by hourSeq) V right join timeTable T
		on V.hourSeq = T.hourSeq  <![CDATA[  and cnt < 6  ]]>
		order by hour
	</select>
	
	<!-- 병원의 영업시간 가져오기 -->
	<resultMap type="HashMap" id="openingHours">
		<result property="day" column="day" javaType="String"></result>
		<result property="open" column="open" javaType="String"></result>
		<result property="close" column="close" javaType="String"></result>
	</resultMap>
	
	<select id="getOpeningHours" parameterType="String" resultMap="openingHours">
		select nvl2(s.open, s.day, null) as day, nvl(s.open, null) as open, nvl2(s.open, t.hour, null) as close
		from
		(select s.day, s.close, t.hour as open
		from schedule s join
		     timetable t
		     on s.open = t.hourSeq and s.hpSeq = #{hpSeq}
		)s
		left join timetable t
		on s.close = t.hourSeq
		order by day asc
	</select>
	
	<select id="getReservSeq" parameterType="HashMap" resultType="String">
		select reservSeq
			from
			(
			select rownum, reservSeq
			from reservation 
			where userid =#{userid} and hpSeq = #{hpSeq} and to_char(visitDate, 'yyyy-mm-dd') = #{visitDate}
			order by reservSeq desc
			)
			where rownum = 1
					
	</select>
	
<insert id="makeReservation"  parameterType="HashMap">
   	insert into reservation(reservseq, userid, hpseq, hourseq, visitdate, day)
    values(RESERVSEQ.nextval, #{userid}, #{hpSeq}, #{hourSeq}, to_date(#{visitDate}), #{day})
</insert>

<select id="selectMemberInfo" parameterType="String" resultType="com.synergy.socdoc.member.MemberVO">
	select * from member where userid = #{userid}
</select>

</mapper>
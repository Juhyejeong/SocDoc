<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="newMem">
	
	<select id="getContent" resultType="String">
		select email from tbl_test where userid = 'woniyoon'
	</select>
	
	<!-- 로그인 처리 -->
	<select id="getLoginMember" parameterType="HashMap" resultType="com.synergy.socdoc.member.MemberVO">
		select userid, pwd
		from member
		where userid=#{userid} and pwd=#{pwd}
	</select>
	<select id="getHpLoginMember" parameterType="HashMap" resultType="com.synergy.socdoc.member.HpMemberVO">
		select userid, pwd
		from hpMember
		where userid=#{userid} and pwd=#{pwd}
	</select>
		
	<!-- 회원가입 회원 아이디 중복검사 -->
	<select id="idChk" resultType="int">
		select count(*)
		from member
		where userid = #{userid}
	</select>
	
	<select id="hpIdChk" resultType="int">
		select count(*)
		from hpMember
		where userid = #{hpUserid}
	</select>
	
	<!-- 회원가입 이메일 중복검사 -->
	<select id="emailChk" resultType="int">
		select count(*)
		from member
		where email = #{email}
	</select>
	
	<select id="hpEmailChk" resultType="int">
		select count(*)
		from hpMember
		where email = #{hpEmail}
	</select>

	<!-- 회원가입 -->
	<insert id="register" parameterType="com.synergy.socdoc.member.MemberVO">
		insert into member(userid, pwd, email, name, phone, memberSeq, birthDate, gender) 
		values (#{userid}, #{pwd},#{email},#{name},#{phone}, memberSeq.nextval, to_date(#{birthDate}, 'yyyy-mm-dd'), #{gender})
	</insert>
	<insert id="hpRegister" parameterType="com.synergy.socdoc.member.HpMemberVO">
		insert into hpMember(userid, pwd, email, name, regId, hpSeq) 
		values (#{userid}, #{pwd},#{email},#{name}, #{regId}, hpSeq.nextval)
	</insert>
	
	<!-- 아이디 찾기 -->
	<select id="idFind" parameterType="com.synergy.socdoc.member.MemberVO">
		select userid 
		from member
		where name=#{name} and email=#{email}
	</select>
	<select id="idFindResult" parameterType="HashMap" resultType="com.synergy.socdoc.member.MemberVO">
		select userid, email, to_char(registerDate, 'yyyy-mm-dd') as registerDate
		from member
		where name=#{name} and email=#{email} 
	</select>	
	<select id="hpIdFindResult" parameterType="HashMap" resultType="com.synergy.socdoc.member.HpMemberVO">
		select userid, email, to_char(registerDate, 'yyyy-mm-dd') as registerDate
		from hpMember
		where regId=#{regId} and email=#{email}
	</select>	
 
 	<!-- 비밀번호 찾기/변경 -->
	<update id = "pwdFind" parameterType="hashMap">
    	update member set pwd=#{pwd}
    	where userid=#{userid} and name=#{name} and email=#{email}
    </update>

	<!-- 비밀번호 업데이트 -->
	<update id = "pwdUpdate" parameterType="hashMap">
    	update member set pwd=#{pwd}
    	where userid=#{userid} and name=#{name} and email=#{email}
    </update>
    
    <!-- 회원인지 확인 -->
	<select id="checkMember" parameterType="HashMap" resultType="int">
		select count(*)
		from member
		where userid=#{userid} and name=#{name} and email=#{email}
	</select>	
</mapper>